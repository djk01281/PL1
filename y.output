Grammar

    0 $accept: program $end

    1 program: program expr EOL
    2        | %empty

    3 expr: smexpr
    4     | expr ADD smexpr
    5     | expr SUB smexpr
    6     | expr MUL smexpr
    7     | expr DIV smexpr

    8 smexpr: LPR expr RPR
    9       | INT


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 9
ADD (259) 4
SUB (260) 5
MUL (261) 6
DIV (262) 7
LPR (263) 8
RPR (264) 8
EOL (265) 1


Nonterminals, with rules where they appear

$accept (11)
    on left: 0
program (12)
    on left: 1 2, on right: 0 1
expr (13)
    on left: 3 4 5 6 7, on right: 1 4 5 6 7 8
smexpr (14)
    on left: 8 9, on right: 3 4 5 6 7


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    1 program: program . expr EOL

    $end  shift, and go to state 2
    INT   shift, and go to state 3
    LPR   shift, and go to state 4

    expr    go to state 5
    smexpr  go to state 6


State 2

    0 $accept: program $end .

    $default  accept


State 3

    9 smexpr: INT .

    $default  reduce using rule 9 (smexpr)


State 4

    8 smexpr: LPR . expr RPR

    INT  shift, and go to state 3
    LPR  shift, and go to state 4

    expr    go to state 7
    smexpr  go to state 6


State 5

    1 program: program expr . EOL
    4 expr: expr . ADD smexpr
    5     | expr . SUB smexpr
    6     | expr . MUL smexpr
    7     | expr . DIV smexpr

    ADD  shift, and go to state 8
    SUB  shift, and go to state 9
    MUL  shift, and go to state 10
    DIV  shift, and go to state 11
    EOL  shift, and go to state 12


State 6

    3 expr: smexpr .

    $default  reduce using rule 3 (expr)


State 7

    4 expr: expr . ADD smexpr
    5     | expr . SUB smexpr
    6     | expr . MUL smexpr
    7     | expr . DIV smexpr
    8 smexpr: LPR expr . RPR

    ADD  shift, and go to state 8
    SUB  shift, and go to state 9
    MUL  shift, and go to state 10
    DIV  shift, and go to state 11
    RPR  shift, and go to state 13


State 8

    4 expr: expr ADD . smexpr

    INT  shift, and go to state 3
    LPR  shift, and go to state 4

    smexpr  go to state 14


State 9

    5 expr: expr SUB . smexpr

    INT  shift, and go to state 3
    LPR  shift, and go to state 4

    smexpr  go to state 15


State 10

    6 expr: expr MUL . smexpr

    INT  shift, and go to state 3
    LPR  shift, and go to state 4

    smexpr  go to state 16


State 11

    7 expr: expr DIV . smexpr

    INT  shift, and go to state 3
    LPR  shift, and go to state 4

    smexpr  go to state 17


State 12

    1 program: program expr EOL .

    $default  reduce using rule 1 (program)


State 13

    8 smexpr: LPR expr RPR .

    $default  reduce using rule 8 (smexpr)


State 14

    4 expr: expr ADD smexpr .

    $default  reduce using rule 4 (expr)


State 15

    5 expr: expr SUB smexpr .

    $default  reduce using rule 5 (expr)


State 16

    6 expr: expr MUL smexpr .

    $default  reduce using rule 6 (expr)


State 17

    7 expr: expr DIV smexpr .

    $default  reduce using rule 7 (expr)
