Grammar

    0 $accept: program $end

    1 program: program expr EOL
    2        | %empty

    3 expr: expr ADD smexpr
    4     | expr SUB smexpr
    5     | smexpr

    6 smexpr: smexpr MUL term
    7       | smexpr DIV term
    8       | term

    9 term: LPR expr RPR
   10     | INT
   11     | SUB INT


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 10 11
ADD (259) 3
SUB (260) 4 11
MUL (261) 6
DIV (262) 7
LPR (263) 9
RPR (264) 9
EOL (265) 1


Nonterminals, with rules where they appear

$accept (11)
    on left: 0
program (12)
    on left: 1 2, on right: 0 1
expr (13)
    on left: 3 4 5, on right: 1 3 4 9
smexpr (14)
    on left: 6 7 8, on right: 3 4 5 6 7
term (15)
    on left: 9 10 11, on right: 6 7 8


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    1 program: program . expr EOL

    $end  shift, and go to state 2
    INT   shift, and go to state 3
    SUB   shift, and go to state 4
    LPR   shift, and go to state 5

    expr    go to state 6
    smexpr  go to state 7
    term    go to state 8


State 2

    0 $accept: program $end .

    $default  accept


State 3

   10 term: INT .

    $default  reduce using rule 10 (term)


State 4

   11 term: SUB . INT

    INT  shift, and go to state 9


State 5

    9 term: LPR . expr RPR

    INT  shift, and go to state 3
    SUB  shift, and go to state 4
    LPR  shift, and go to state 5

    expr    go to state 10
    smexpr  go to state 7
    term    go to state 8


State 6

    1 program: program expr . EOL
    3 expr: expr . ADD smexpr
    4     | expr . SUB smexpr

    ADD  shift, and go to state 11
    SUB  shift, and go to state 12
    EOL  shift, and go to state 13


State 7

    5 expr: smexpr .
    6 smexpr: smexpr . MUL term
    7       | smexpr . DIV term

    MUL  shift, and go to state 14
    DIV  shift, and go to state 15

    $default  reduce using rule 5 (expr)


State 8

    8 smexpr: term .

    $default  reduce using rule 8 (smexpr)


State 9

   11 term: SUB INT .

    $default  reduce using rule 11 (term)


State 10

    3 expr: expr . ADD smexpr
    4     | expr . SUB smexpr
    9 term: LPR expr . RPR

    ADD  shift, and go to state 11
    SUB  shift, and go to state 12
    RPR  shift, and go to state 16


State 11

    3 expr: expr ADD . smexpr

    INT  shift, and go to state 3
    SUB  shift, and go to state 4
    LPR  shift, and go to state 5

    smexpr  go to state 17
    term    go to state 8


State 12

    4 expr: expr SUB . smexpr

    INT  shift, and go to state 3
    SUB  shift, and go to state 4
    LPR  shift, and go to state 5

    smexpr  go to state 18
    term    go to state 8


State 13

    1 program: program expr EOL .

    $default  reduce using rule 1 (program)


State 14

    6 smexpr: smexpr MUL . term

    INT  shift, and go to state 3
    SUB  shift, and go to state 4
    LPR  shift, and go to state 5

    term  go to state 19


State 15

    7 smexpr: smexpr DIV . term

    INT  shift, and go to state 3
    SUB  shift, and go to state 4
    LPR  shift, and go to state 5

    term  go to state 20


State 16

    9 term: LPR expr RPR .

    $default  reduce using rule 9 (term)


State 17

    3 expr: expr ADD smexpr .
    6 smexpr: smexpr . MUL term
    7       | smexpr . DIV term

    MUL  shift, and go to state 14
    DIV  shift, and go to state 15

    $default  reduce using rule 3 (expr)


State 18

    4 expr: expr SUB smexpr .
    6 smexpr: smexpr . MUL term
    7       | smexpr . DIV term

    MUL  shift, and go to state 14
    DIV  shift, and go to state 15

    $default  reduce using rule 4 (expr)


State 19

    6 smexpr: smexpr MUL term .

    $default  reduce using rule 6 (smexpr)


State 20

    7 smexpr: smexpr DIV term .

    $default  reduce using rule 7 (smexpr)
